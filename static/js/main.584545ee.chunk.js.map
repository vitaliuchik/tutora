{"version":3,"sources":["components/Header/LoginMenu.js","components/Header/Header.js","components/Footer/Footer.js","components/Card/TutorCard.js","components/TutorsPageContainer/TutorsPageContainer.js","components/MainPageContainer/MainPageContainer.js","App.js","serviceWorker.js","index.js"],"names":["LoginMenu","React","useState","anchorEl","setAnchorEl","IconButton","className","id","aria-controls","aria-haspopup","onClick","event","currentTarget","AccountCircle","fontSize","Menu","keepMounted","open","Boolean","onClose","MenuItem","Header","Button","variant","Footer","Facebook","GitHub","Telegram","Twitter","YouTube","TutorCard","props","Card","CardActionArea","CardMedia","component","alt","tutorInfo","imageDescription","height","image","imageSrc","title","CardContent","name","description","CardActions","size","color","TutorsPageContainer","map","key","MainPageContainer","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.584545ee.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\n\r\nimport {Menu, MenuItem, IconButton} from '@material-ui/core'\r\nimport {AccountCircle} from '@material-ui/icons'\r\n\r\nfunction LoginMenu() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton className=\"button\" id=\"login-button\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <AccountCircle fontSize=\"large\"></AccountCircle>\r\n            </IconButton>\r\n            <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n            <MenuItem >Log In</MenuItem>\r\n            <MenuItem >Sign Up</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginMenu;","import React from 'react'\r\nimport './Header.css'\r\n\r\nimport {Button} from '@material-ui/core'\r\nimport LoginMenu from './LoginMenu'\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header-container\">\r\n            <div id=\"title\"><p>Tutora</p></div>\r\n            <div className=\"header-button-container\">\r\n                <div><Button variant=\"contained\" className=\"button\">Home</Button></div>\r\n                <div><Button variant=\"contained\" className=\"button\">Tutors</Button></div>\r\n                <div><Button variant=\"contained\" className=\"button\">Become a tutor</Button></div>\r\n                <div><Button variant=\"contained\" className=\"button\">Contact</Button></div>\r\n                <LoginMenu></LoginMenu>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nimport {IconButton} from '@material-ui/core'\r\nimport {Facebook, GitHub, Telegram, Twitter, YouTube} from '@material-ui/icons'\r\n\r\n\r\nfunction Footer() {\r\n    return(\r\n        <div className=\"footer-container\">\r\n            <div className=\"footer-button-container\">                \r\n                <div><IconButton className=\"icon\"><Facebook /></IconButton></div>\r\n                <div><IconButton className=\"icon\"><GitHub /></IconButton></div>\r\n                <div><IconButton className=\"icon\"><Telegram /></IconButton></div>\r\n                <div><IconButton className=\"icon\"><Twitter /></IconButton></div>\r\n                <div><IconButton className=\"icon\"><YouTube /></IconButton></div>\r\n            </div>\r\n            <div className=\"copyright\">\r\n                <p>&copy; 2020 Copyright: Vitalii Papka</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport './TutorCard.css'\r\n\r\nimport {Button, Card, CardActionArea, CardMedia, CardActions, CardContent} from '@material-ui/core'\r\n\r\n\r\nfunction TutorCard(props) {\r\n    return (\r\n        <Card className=\"card-container\" >\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt={props.tutorInfo.imageDescription}\r\n                    height=\"200\"\r\n                    image={props.tutorInfo.imageSrc}\r\n                    title={props.tutorInfo.imageDescription}\r\n                >\r\n                </CardMedia>\r\n                <CardContent>\r\n                    <h1 id=\"tutor-name\">{props.tutorInfo.name}</h1>\r\n                    <p id=\"tutor-description\">{props.tutorInfo.description}</p>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    More info\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default TutorCard\r\n","import React from 'react'\r\nimport './TutorsPageContainer.css'\r\n\r\nimport TutorCard from '../Card/TutorCard'\r\n\r\n\r\nfunction TutorsPageContainer() {\r\n    const tutorsInfo = [\r\n        {\r\n            name: 'Vitalii Papka',\r\n            imageSrc: 'https://react.semantic-ui.com/images/avatar/large/matthew.png',\r\n            imageDescription: 'tutor face',\r\n            description: 'description'\r\n        },\r\n        {\r\n            name: 'Tutor',\r\n            imageSrc: 'https://react.semantic-ui.com/images/avatar/large/matthew.png',\r\n            imageDescription: 'tutor face',\r\n            description: 'description'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"tutors-container container\">\r\n            {tutorsInfo.map((tutorInfo, key) => {\r\n                return <TutorCard key={key+1} tutorInfo={tutorInfo}></TutorCard>\r\n            })}           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TutorsPageContainer;","import React from 'react'\r\nimport './MainPageContainer.css'\r\nimport '../../App.css'\r\n\r\n\r\n\r\nfunction MainPageContainer() {\r\n    return (\r\n        <div className=\"main-container container\">\r\n            <p>here will be a main page content</p>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPageContainer;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer';\nimport TutorsPageContainer from './components/TutorsPageContainer/TutorsPageContainer';\nimport MainPageContainer from './components/MainPageContainer/MainPageContainer';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Header></Header>\n      <TutorsPageContainer></TutorsPageContainer>\n      <MainPageContainer></MainPageContainer>\n      <Footer></Footer>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}